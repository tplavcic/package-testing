---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PS 5.6, PT and PXB 2.3
#   does some tests

- hosts: pkg-test

  tasks:
  - name: include tasks for test env setup
    include: ../tasks/test_prep.yml

  - name: include tasks for enabling test repo
    include: ../tasks/enable_testing_repo.yml

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - curl -o /package-testing/world.sql --limit-rate 200k https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install Percona Toolkit new deb packages
    apt: name={{item}} update_cache=yes state=latest
    with_items:
    - percona-toolkit
    when: ansible_os_family == "Debian"

  - name: install Percona Server new deb packages
    apt: name={{item}} update_cache=no state=latest
    with_items:
    - percona-server-server-5.6
    - percona-server-test-5.6
    - percona-server-5.6-dbg
    - percona-server-source-5.6
    - percona-server-tokudb-5.6
    when: ansible_os_family == "Debian"

  - name: install Percona XtraBackup new deb packages
    apt: name={{item}} update_cache=no state=latest
    with_items:
    - percona-xtrabackup
    - percona-xtrabackup-test
    - percona-xtrabackup-dbg
    when: ansible_os_family == "Debian"

  - name: install Percona Server new rpm packages
    yum: name={{item}} state=latest
    with_items:
    - Percona-Server-server-56
    - Percona-Server-test-56
    - Percona-Server-56-debuginfo
    - Percona-Server-devel-56
    - Percona-Server-tokudb-56
    - Percona-Server-shared-56
    - Percona-Server-client-56
    when: ansible_os_family == "RedHat"

  - name: install Percona Toolkit new rpm packages
    yum: name={{item}} state=latest
    with_items:
    - percona-toolkit
    when: ansible_os_family == "RedHat"

  - name: install Percona XtraBackup new rpm packages
    yum: name={{item}} state=latest
    with_items:
    - percona-xtrabackup
    - percona-xtrabackup-test
    - percona-xtrabackup-debuginfo
    when: ansible_os_family == "RedHat"

  - name: start mysql service with init script
    command: /etc/init.d/mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "5"

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysql
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

#  - name: disable selinux on centos7 for TokuDB to work
#    command: setenforce 0
#    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: install tokudb and restart server
    command: /usr/bin/ps_tokudb_admin --enable --enable-backup

  - name: restart mysql service on centos 5
    command: /etc/init.d/mysql restart
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "5"

  - name: restart mysql service
    service: name=mysql state=restarted
    when: ansible_os_family != "RedHat" or ansible_distribution_major_version != "5"

  - name: re-run ps_tokudb_admin to finish tokudb install
    command: /usr/bin/ps_tokudb_admin --enable --enable-backup

#  - name: install plugins, import world database, test tokudb
#    command: /package-testing/plugins_test_56.sh ps
#
#  - name: check that Percona Server version is correct
#    command: /package-testing/version_check.sh ps56
#
#  - name: check that Percona Server package versions are correct
#    command: /package-testing/package_check.sh ps56
#
#  - name: check that Percona Toolkit version is correct
#    command: /package-testing/version_check.sh pt
#
#  - name: check that Percona XtraBackup version is correct
#    command: /package-testing/version_check.sh pxb23
#
#  - name: check that Percona XtraBackup package versions are correct
#    command: /package-testing/package_check.sh pxb23
#
#  - name: install 3rd party packages with apt
#    apt: name={{item}}
#    with_items:
#    - rsyslog-mysql
#    when: ansible_os_family == "Debian"
#
#  - name: install 3rd party packages with yum
#    yum: name={{item}}
#    with_items:
#    - rsyslog-mysql
#    when: ansible_os_family == "RedHat"
