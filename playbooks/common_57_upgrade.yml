---
# This playbook does following:
#   sets main Percona repo
#   installs PS 5.7, PT and PXB 2.4
#   changes repo to testing
#   upgrades packages to the new version
#   does some tests

- hosts: pkg-test

  tasks:
  - name: include tasks for test env setup
    include: ../tasks/test_prep.yml

#
# Install from main repository
#
  - name: include tasks for enabling main repo
    include: ../tasks/enable_main_repo.yml

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - curl -o /package-testing/world.sql --limit-rate 200k https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

# - name: install Percona Toolkit deb packages previous version
#   apt: name={{item}} update_cache=yes state=latest
#   with_items:
#   - percona-toolkit
#   when: ansible_os_family == "Debian"

  - name: install Percona Server deb packages previous version
    apt: name={{item}} update_cache=no state=latest
    with_items:
    - percona-server-server-5.7
    - percona-server-test-5.7
    - percona-server-5.7-dbg
    - percona-server-source-5.7
    - percona-server-tokudb-5.7
    when: ansible_os_family == "Debian"

  - name: install Percona XtraBackup deb packages previous version
    apt: name={{item}} update_cache=no state=latest
    with_items:
    - percona-xtrabackup-24
    - percona-xtrabackup-test-24
    - percona-xtrabackup-dbg-24
    when: ansible_os_family == "Debian"

  - name: install Percona Server rpm packages previous version
    yum: name={{item}} state=latest
    with_items:
    - Percona-Server-server-57
    - Percona-Server-test-57
    - Percona-Server-57-debuginfo
    - Percona-Server-devel-57
    - Percona-Server-tokudb-57
    - Percona-Server-shared-57
    - Percona-Server-client-57
    when: ansible_os_family == "RedHat"

# - name: install Percona Toolkit rpm packages previous version
#   yum: name={{item}} state=latest
#   with_items:
#   - percona-toolkit
#   when: ansible_os_family == "RedHat"

  - name: install Percona XtraBackup rpm packages previous version
    yum: name={{item}} state=latest
    with_items:
    - percona-xtrabackup-24
    - percona-xtrabackup-test-24
    - percona-xtrabackup-24-debuginfo
    when: ansible_os_family == "RedHat"

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysql
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: copy .my.cnf with credentials on centos
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

#  - name: disable selinux on centos7 for TokuDB to work
#    command: setenforce 0
#    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: install tokudb and restart server
    command: /usr/bin/ps_tokudb_admin --enable --enable-backup

  - name: restart mysql service
    service: name=mysql state=restarted

  - name: re-run ps_tokudb_admin to finish tokudb install
    command: /usr/bin/ps_tokudb_admin --enable --enable-backup

  - name: install plugins, import world database, test tokudb
    command: /package-testing/plugins_test_57.sh ps

  - name: install 3rd party packages with apt
    apt: name={{item}}
    with_items:
    - rsyslog-mysql
    when: ansible_os_family == "Debian"

  - name: install 3rd party packages with yum
    yum: name={{item}}
    with_items:
    - rsyslog-mysql
    when: ansible_os_family == "RedHat"

#
# Enable testing repository
#
  - include: ../tasks/enable_testing_repo.yml

#
# Upgrade packages
#
# - name: upgrade Percona Toolkit to new deb packages
#   apt: name={{item}} update_cache=yes state=latest
#   with_items:
#   - percona-toolkit
#   when: ansible_os_family == "Debian"

  - name: upgrade Percona Server to new deb packages
    apt: name={{item}} update_cache=no state=latest
    with_items:
    - percona-server-server-5.7
    - percona-server-test-5.7
    - percona-server-5.7-dbg
    - percona-server-source-5.7
    - percona-server-tokudb-5.7
    when: ansible_os_family == "Debian"

  - name: upgrade Percona XtraBackup to new deb packages
    apt: name={{item}} update_cache=no state=latest
    with_items:
    - percona-xtrabackup-24
    - percona-xtrabackup-test-24
    - percona-xtrabackup-dbg-24
    when: ansible_os_family == "Debian"

# - name: upgrade Percona Toolkit to new rpm packages
#   yum: name={{item}} state=latest
#   with_items:
#   - percona-toolkit
#   when: ansible_os_family == "RedHat"

  - name: upgrade Percona Server to new rpm packages on centos 5 and 6
    yum: name={{item}} state=latest
    with_items:
    - Percona-Server-server-57
    - Percona-Server-test-57
    - Percona-Server-57-debuginfo
    - Percona-Server-devel-57
    - Percona-Server-tokudb-57
    - Percona-Server-shared-57
    - Percona-Server-client-57
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version < "7"

  - name: upgrade Percona Server to new rpm packages on centos 7
    yum: name={{item}} state=latest
    with_items:
    - Percona-Server-server-57
    - Percona-Server-test-57
    - Percona-Server-57-debuginfo
    - Percona-Server-devel-57
    - Percona-Server-tokudb-57
    - Percona-Server-shared-57
    - Percona-Server-shared-compat-57
    - Percona-Server-client-57
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version > "6"

  - name: upgrade Percona XtraBackup to new rpm packages
    yum: name={{item}} state=latest
    with_items:
    - percona-xtrabackup-24
    - percona-xtrabackup-test-24
    - percona-xtrabackup-24-debuginfo
    when: ansible_os_family == "RedHat"

  - name: run mysql_upgrade
    command: mysql_upgrade -uroot

  - name: restart mysql service
    service: name=mysql state=restarted

  - name: check that Percona Server version is correct
    command: /package-testing/version_check.sh ps57

  - name: check that Percona Server package versions are correct
    command: /package-testing/package_check.sh ps57

# - name: check that Percona Toolkit version is correct
#   command: /package-testing/version_check.sh pt

  - name: install GR plugin
    command: /vagrant/gr.sh

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb24

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb24
